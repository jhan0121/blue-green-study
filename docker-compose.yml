services:
  nginx:
    image: nginx:alpine
    container_name: nginx_lb
    ports:
      - "3030:3030"
      - "8081:8081"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/upstream.conf:/etc/nginx/upstream.conf:rw
      - ./nginx/upstream-blue.conf:/etc/nginx/upstream-blue.conf:ro
      - ./nginx/upstream-green.conf:/etc/nginx/upstream-green.conf:ro
    networks:
      - bluegreen-network
    restart: unless-stopped
    depends_on:
      - app_blue
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  app_blue:
    image: myapp:blue
    container_name: app_blue
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_ENV=blue
      - BUILD_NUMBER=${BUILD_NUMBER:-1}
      - SPRING_PROFILES_ACTIVE=blue
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_blue:3306/bluegreen
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER:-app_user}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD:-app_pass}
    expose:
      - "8080"
    depends_on:
      - mysql_blue
    networks:
      - bluegreen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  app_green:
    image: myapp:green
    container_name: app_green
    build:
      context: .
      dockerfile: Dockerfile
    profiles:
      - green
    environment:
      - APP_ENV=green
      - BUILD_NUMBER=${BUILD_NUMBER:-1}
      - SPRING_PROFILES_ACTIVE=green
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_green:3306/bluegreen
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER:-app_user}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD:-app_pass}
    expose:
      - "8080"
    depends_on:
      - mysql_green
    networks:
      - bluegreen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  mysql_blue:
    image: mysql:8.0
    container_name: mysql_blue
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpass}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-bluegreen}
      - MYSQL_USER=${MYSQL_USER:-app_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-app_pass}
    volumes:
      - mysql_blue_data:/var/lib/mysql
      - ./mysql/blue.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    networks:
      - bluegreen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpass}"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  mysql_green:
    image: mysql:8.0
    container_name: mysql_green
    profiles:
      - green
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpass}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-bluegreen}
      - MYSQL_USER=${MYSQL_USER:-app_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-app_pass}
    volumes:
      - mysql_green_data:/var/lib/mysql
      - ./mysql/green.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    networks:
      - bluegreen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpass}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_blue_data:
  mysql_green_data:

networks:
  bluegreen-network:
    driver: bridge
