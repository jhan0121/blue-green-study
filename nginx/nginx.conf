events {
    worker_connections 1024;
}

http {
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr response_time: $upstream_response_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Upstream configuration with health checks
    upstream app {
        server app_blue:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Health check for internal monitoring
    server {
        listen 8081;
        server_name localhost;

        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /upstream-health {
            proxy_pass http://app/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
        }
    }

    # Main application server
    server {
        listen 3030;
        server_name localhost;

        # Basic security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Connection settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Main application routes
        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Connection keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Health check endpoint
        location /health {
            proxy_pass http://app/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
            access_log off;
        }

        # Version endpoint
        location /version {
            proxy_pass http://app/version;
            proxy_set_header Host $host;
        }

        # Status page for monitoring
        location /nginx-status {
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker networks
            deny all;

            return 200 '{"status":"ok","upstream":"app","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
}